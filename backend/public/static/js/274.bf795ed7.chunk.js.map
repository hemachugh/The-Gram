{"version":3,"file":"static/js/274.bf795ed7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","alpha","palette","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","React","inProps","ref","useThemeProps","className","component","style","other","_objectWithoutPropertiesLoose","Boolean","children","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","value","apply","this","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","fromCharCode","createPacketEncoderStream","TransformStream","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","prev","TransportError","reason","description","context","Error","Transport","writable","query","socket","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","seed","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","undefined","_a","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withErr","reject","arg1","arg2","tryCount","pending","hasError","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}