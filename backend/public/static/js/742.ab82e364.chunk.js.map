{"version":3,"file":"static/js/742.ab82e364.chunk.js","mappings":"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","sources":["components/Home/PostItem.jsx","components/Layouts/SkeletonPost.jsx","components/Home/PostsContainer.jsx","components/Home/Sidebar/UserListItem.jsx","components/Home/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/Layouts/SkeletonUserItem.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addComment, likePost, savePost } from '../../actions/postAction';\nimport { likeFill } from '../Navbar/SvgIcons';\nimport { commentIcon, emojiIcon, likeIconOutline, moreIcons, saveIconFill, saveIconOutline, shareIcon } from './SvgIcons'\nimport { Picker } from 'emoji-mart'\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst PostItem = ({ _id, caption, likes, comments, image, postedBy, savedBy, createdAt, setUsersDialog, setUsersList }) => {\n\n    const dispatch = useDispatch();\n    const commentInput = useRef(null);\n\n    const { user } = useSelector((state) => state.user);\n    // const { loading, post } = useSelector((state) => state.postDetails);\n\n    const [allLikes, setAllLikes] = useState(likes);\n    const [allComments, setAllComments] = useState(comments);\n    const [allSavedBy, setAllSavedBy] = useState(savedBy);\n\n    const [liked, setLiked] = useState(false);\n    const [saved, setSaved] = useState(false);\n    const [comment, setComment] = useState(\"\");\n    const [viewComment, setViewComment] = useState(false);\n    const [showEmojis, setShowEmojis] = useState(false);\n\n    const [likeEffect, setLikeEffect] = useState(false);\n\n    const handleLike = async () => {\n        setLiked(!liked);\n        await dispatch(likePost(_id));\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\n        setAllLikes(data.post.likes)\n    }\n\n    const handleComment = async (e) => {\n        e.preventDefault();\n        await dispatch(addComment(_id, comment));\n        setComment(\"\");\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\n        setAllComments(data.post.comments)\n    }\n\n    const handleSave = async () => {\n        setSaved(!saved);\n        await dispatch(savePost(_id));\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\n        setAllSavedBy(data.post.savedBy)\n    }\n\n    const handleLikeModal = () => {\n        setUsersDialog(true);\n        setUsersList(allLikes);\n    }\n\n    const setLike = () => {\n        setLikeEffect(true)\n        setTimeout(() => {\n            setLikeEffect(false)\n        }, 500)\n        if (liked) {\n            return;\n        }\n        handleLike();\n    }\n\n    useEffect(() => {\n        setLiked(allLikes.some((u) => u._id === user._id))\n    }, [allLikes]);\n\n    useEffect(() => {\n        setSaved(allSavedBy.some((id) => id === user._id))\n    }, [allSavedBy]);\n\n\n    return (\n        <div className=\"flex flex-col border rounded bg-white relative\">\n\n            <div className=\"flex justify-between px-3 py-2.5 border-b items-center\">\n                <div className=\"flex space-x-3 items-center\">\n                    <Link to={`/${postedBy.username}`}><img draggable=\"false\" className=\"w-10 h-10 rounded-full object-cover\" src={postedBy.avatar} alt=\"avatar\" /></Link>\n                    <Link to={`/${postedBy.username}`} className=\"text-black text-sm font-semibold\">{postedBy.username}</Link>\n                </div>\n                <span className=\"cursor-pointer\">{moreIcons}</span>\n            </div>\n\n            {/* post image container */}\n            <div className=\"relative flex items-center justify-center\" onDoubleClick={setLike}>\n                <img draggable=\"false\" loading=\"lazy\" className=\"w-full h-full object-cover object-center\" src={image} alt=\"post image\" />\n                {likeEffect &&\n                    <img draggable=\"false\" height=\"80px\" className=\"likeEffect\" alt=\"heart\" src=\"https://img.icons8.com/ios-filled/2x/ffffff/like.png\" />\n                }\n            </div>\n\n            {/* like comment container */}\n            <div className=\"flex flex-col px-4 space-y-1 border-b pb-2 mt-2\">\n\n                {/* icons container */}\n                <div className=\"flex items-center justify-between py-2\">\n                    <div className=\"flex space-x-4\">\n                        <button onClick={handleLike}>{liked ? likeFill : likeIconOutline}</button>\n                        <button onClick={() => commentInput.current.focus()}>{commentIcon}</button>\n                        {shareIcon}\n                    </div>\n                    <button onClick={handleSave}>{saved ? saveIconFill : saveIconOutline}</button>\n                </div>\n\n                {/* likes  */}\n                <span onClick={handleLikeModal} className=\"font-semibold text-sm cursor-pointer\">{allLikes.length} likes</span>\n\n                {/* comment */}\n                <div className=\"flex flex-auto items-center space-x-1\">\n                    <Link to={`/${postedBy.username}`} className=\"text-sm font-semibold hover:underline\">{postedBy.username}</Link>\n                    <span className=\"text-sm truncate\">{caption}</span>\n                </div>\n\n                {/* time */}\n                {allComments.length > 0 ?\n\n                    <span onClick={() => setViewComment(!viewComment)} className=\"text-[13px] text-gray-500 cursor-pointer\">\n                        {viewComment ? \"Hide Comments\" :\n                            allComments.length === 1 ?\n                                `View ${allComments.length} Comment` :\n                                `View All ${allComments.length} Comments`\n                        }\n                    </span> :\n\n                    <span className=\"text-[13px] text-gray-500\">No Comments Yet!</span>\n\n                }\n                <span className=\"text-xs text-gray-500 cursor-pointer\">{moment(createdAt).fromNow()}</span>\n\n                {viewComment &&\n                    <ScrollToBottom className=\"w-full h-52 overflow-y-auto py-1\">\n                        {allComments.map((c) => (\n                            <div className=\"flex items-start mb-2 space-x-2\" key={c._id}>\n                                <img draggable=\"false\" className=\"h-7 w-7 rounded-full object-cover mr-0.5\" src={c.user.avatar} alt=\"avatar\" />\n                                <Link to={`/${c.user}`} className=\"text-sm font-semibold hover:underline\">{c.user.username}</Link>\n                                <p className=\"text-sm\">{c.comment}</p>\n                            </div>\n                        ))}\n                    </ScrollToBottom>\n                }\n\n            </div>\n\n            {/* comment input container */}\n            <form onSubmit={handleComment} className=\"flex items-center justify-between p-3 w-full space-x-3\">\n                <span onClick={() => setShowEmojis(!showEmojis)} className=\"cursor-pointer\">{emojiIcon}</span>\n\n                {showEmojis && (\n                    <div className=\"absolute bottom-12 -left-2\">\n                        <Picker\n                            set=\"google\"\n                            onSelect={(e) => setComment(comment + e.native)}\n                            title=\"Emojis\"\n                        />\n                    </div>\n                )}\n\n                <input\n                    className=\"flex-auto text-sm outline-none border-none bg-transparent\"\n                    type=\"text\"\n                    value={comment}\n                    ref={commentInput}\n                    required\n                    onFocus={() => setShowEmojis(false)}\n                    onChange={(e) => setComment(e.target.value)}\n                    placeholder=\"Add a comment...\" />\n                <button type=\"submit\" className={`${comment.trim().length < 1 ? 'text-blue-300' : 'text-primary-blue'} text-sm font-semibold`} disabled={comment.trim().length < 1}>Post</button>\n            </form>\n\n        </div >\n    )\n}\n\nexport default PostItem","import { Skeleton } from '@mui/material'\n\nconst SkeletonPost = () => {\n    return (\n        <div className=\"flex flex-col border w-full my-4 rounded bg-white\">\n            <div className=\"flex items-center gap-2 p-2\">\n                <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                <div className=\"flex flex-col gap-1 w-full\">\n                    <Skeleton height={10} variant=\"rectangular\" width=\"25%\" animation=\"wave\" />\n                    <Skeleton height={10} variant=\"rectangular\" width=\"20%\" animation=\"wave\" />\n                </div>\n            </div>\n            <Skeleton sx={{ height: 520 }} animation=\"wave\" variant=\"rectangular\" />\n        </div>\n    )\n}\n\nexport default SkeletonPost","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { clearErrors, getPostsOfFollowing } from \"../../actions/postAction\";\nimport {\n  LIKE_UNLIKE_POST_RESET,\n  NEW_COMMENT_RESET,\n  POST_FOLLOWING_RESET,\n  SAVE_UNSAVE_POST_RESET,\n} from \"../../constants/postConstants\";\nimport UsersDialog from \"../Layouts/UsersDialog\";\nimport PostItem from \"./PostItem\";\n// import StoriesContainer from \"./StoriesContainer\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport SpinLoader from \"../Layouts/SpinLoader\";\nimport SkeletonPost from \"../Layouts/SkeletonPost\";\n\nconst PostsContainer = () => {\n  const dispatch = useDispatch();\n\n  const [usersList, setUsersList] = useState([]);\n  const [usersDialog, setUsersDialog] = useState(false);\n  const [page, setPage] = useState(2);\n\n  const { loading, error, posts, totalPosts } = useSelector(\n    (state) => state.postOfFollowing\n  );\n  const {\n    error: likeError,\n    message,\n    success,\n  } = useSelector((state) => state.likePost);\n  const { error: commentError, success: commentSuccess } = useSelector(\n    (state) => state.newComment\n  );\n  const {\n    error: saveError,\n    success: saveSuccess,\n    message: saveMessage,\n  } = useSelector((state) => state.savePost);\n\n  const handleClose = () => setUsersDialog(false);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(getPostsOfFollowing());\n    dispatch({ type: POST_FOLLOWING_RESET });\n  }, [dispatch, error]);\n\n  useEffect(() => {\n    if (likeError) {\n      toast.error(likeError);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      toast.success(message);\n      dispatch({ type: LIKE_UNLIKE_POST_RESET });\n    }\n    if (commentError) {\n      toast.error(commentError);\n      dispatch(clearErrors());\n    }\n    if (commentSuccess) {\n      toast.success(\"Comment Added\");\n      dispatch({ type: NEW_COMMENT_RESET });\n    }\n    if (saveError) {\n      toast.error(saveError);\n      dispatch(clearErrors());\n    }\n    if (saveSuccess) {\n      toast.success(saveMessage);\n      dispatch({ type: SAVE_UNSAVE_POST_RESET });\n    }\n  }, [\n    dispatch,\n    success,\n    likeError,\n    message,\n    commentError,\n    commentSuccess,\n    saveError,\n    saveSuccess,\n    saveMessage,\n  ]);\n\n  const fetchMorePosts = () => {\n    setPage((prev) => prev + 1);\n    dispatch(getPostsOfFollowing(page));\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col w-full lg:w-2/3 sm:mt-6 sm:px-8 mb-8\">\n        {/* <StoriesContainer /> */}\n\n        {loading &&\n          Array(5)\n            .fill(\"\")\n            .map((el, i) => <SkeletonPost key={i} />)}\n        <InfiniteScroll\n          dataLength={posts.length}\n          next={fetchMorePosts}\n          hasMore={posts.length !== totalPosts}\n          loader={<SpinLoader />}\n        >\n          <div className=\"w-full h-full mt-1 sm:mt-6 flex flex-col space-y-4\">\n            {posts?.map((post) => (\n              <PostItem\n                key={post._id}\n                {...post}\n                setUsersDialog={setUsersDialog}\n                setUsersList={setUsersList}\n              />\n            ))}\n          </div>\n        </InfiniteScroll>\n\n        <UsersDialog\n          title=\"Likes\"\n          open={usersDialog}\n          onClose={handleClose}\n          usersList={usersList}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default PostsContainer;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { followUser } from \"../../../actions/userAction\";\n\nconst UserListItem = ({ _id, username, avatar }) => {\n  const dispatch = useDispatch();\n\n  const [follow, setFollow] = useState(false);\n\n  const handleFollow = () => {\n    setFollow(!follow);\n    dispatch(followUser(_id));\n  };\n\n  return (\n    <div className=\"flex justify-between items-center\">\n      <div className=\"flex space-x-3 items-center\">\n        <Link to={`/${username}`}>\n          <img\n            draggable=\"false\"\n            className=\"w-9 h-9 rounded-full object-cover\"\n            src={avatar}\n            alt=\"avatar\"\n          />\n        </Link>\n        <div className=\"flex flex-col gap-0.5\">\n          <Link\n            to={`/${username}`}\n            className=\"text-black text-sm font-semibold hover:underline\"\n          >\n            {username}\n          </Link>\n          <span className=\"text-gray-400 text-xs\">New to The Gram</span>\n        </div>\n      </div>\n      <button\n        onClick={handleFollow}\n        className={`${\n          follow ? \"text-red-500\" : \"text-blue-500\"\n        } text-xs font-medium`}\n      >\n        {follow ? \"Unfollow\" : \"Follow\"}\n      </button>\n    </div>\n  );\n};\n\nexport default UserListItem;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getPostsOfFollowing } from \"../../../actions/postAction\";\nimport {\n  clearErrors,\n  getSuggestedUsers,\n  loadUser,\n} from \"../../../actions/userAction\";\nimport { POST_FOLLOWING_RESET } from \"../../../constants/postConstants\";\nimport { FOLLOW_USER_RESET } from \"../../../constants/userConstants\";\nimport SkeletonUserItem from \"../../Layouts/SkeletonUserItem\";\nimport UserListItem from \"./UserListItem\";\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.user);\n\n  const { error, users, loading } = useSelector((state) => state.allUsers);\n  const {\n    error: followError,\n    success,\n    message,\n  } = useSelector((state) => state.followUser);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(getSuggestedUsers());\n  }, [dispatch, error]);\n\n  useEffect(() => {\n    if (followError) {\n      toast.error(followError);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      toast.success(message);\n      // dispatch({ type: POST_FOLLOWING_RESET });\n      // dispatch(getPostsOfFollowing());\n      dispatch({ type: FOLLOW_USER_RESET });\n    }\n  }, [success, followError]);\n\n  return (\n    <div className=\"fixed lg:right-32 xl:right-56 w-3/12 h-full hidden lg:flex flex-col flex-auto m-8 mt-12 pr-8 -z-1\">\n      <div className=\"ml-10 flex flex-col p-2\">\n        {/* <!-- self profile card --> */}\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex flex-auto space-x-4 items-center\">\n            <Link to={`/${user.username}`}>\n              <img\n                draggable=\"false\"\n                className=\"w-14 h-14 rounded-full object-cover\"\n                src={user.avatar}\n                alt={user.name}\n              />\n            </Link>\n            <div className=\"flex flex-col\">\n              <Link\n                to={`/${user.username}`}\n                className=\"text-black text-sm font-semibold\"\n              >\n                {user.username}\n              </Link>\n              <span className=\"text-gray-400 text-sm\">{user.name}</span>\n            </div>\n          </div>\n          <span className=\"text-blue-500 text-xs font-semibold cursor-pointer\">\n            Switch\n          </span>\n        </div>\n\n        {/* <!-- suggestions --> */}\n        <div className=\"flex justify-between items-center mt-5\">\n          <p className=\"font-semibold text-gray-500 text-sm\">\n            Suggestions For You\n          </p>\n          <span className=\"text-black text-xs font-semibold cursor-pointer\">\n            See All\n          </span>\n        </div>\n\n        {/* <!-- suggested profile lists --> */}\n        <div className=\"flex flex-col flex-auto mt-3 space-y-3.5\">\n          {loading\n            ? Array(5)\n                .fill(\"\")\n                .map((el, i) => <SkeletonUserItem key={i} />)\n            : users?.map((user) => <UserListItem {...user} key={user._id} />)}\n        </div>\n\n        {/* <!-- sidebar footer container--> */}\n        <div className=\"flex flex-col mt-8 space-y-6 text-xs text-gray-400\">\n          <div className=\"flex flex-col\">\n            <div className=\"flex items-center space-x-1.5\">\n              {[\n                \"About\",\n                \"Help\",\n                \"Press\",\n                \"API\",\n                \"Jobs\",\n                \"Privacy\",\n                \"Terms\",\n                \"Locations\",\n              ].map((el, i) => (\n                <a href=\"#\" key={i}>\n                  {el}\n                </a>\n              ))}\n            </div>\n            <div className=\"flex items-center space-x-1.5\">\n              {[\"Top Accounts\", \"Hashtags\", \"Language\"].map((el, i) => (\n                <a href=\"#\" key={i}>\n                  {el}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import PostsContainer from \"./PostsContainer\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport MetaData from \"../Layouts/MetaData\";\n\nconst Home = () => {\n  return (\n    <>\n      <MetaData title=\"The Gram\" />\n\n      <div className=\"flex h-full md:w-4/5 lg:w-4/6 mt-14 mx-auto\">\n        <PostsContainer />\n        <Sidebar />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import { Skeleton } from '@mui/material'\n\nconst SkeletonUserItem = () => {\n    return (\n        <div className=\"flex items-center gap-2\">\n            <Skeleton animation=\"wave\" variant=\"circular\" width={45} height={40} />\n            <div className=\"flex flex-col gap-1 w-full\">\n                <Skeleton height={15} variant=\"rectangular\" width=\"60%\" animation=\"wave\" />\n                <Skeleton height={12} variant=\"rectangular\" width=\"30%\" animation=\"wave\" />\n            </div>\n        </div>\n    )\n}\n\nexport default SkeletonUserItem"],"names":["_id","caption","likes","comments","image","postedBy","savedBy","createdAt","setUsersDialog","setUsersList","dispatch","useDispatch","commentInput","useRef","user","useSelector","state","useState","allLikes","setAllLikes","allComments","setAllComments","allSavedBy","setAllSavedBy","liked","setLiked","saved","setSaved","comment","setComment","viewComment","setViewComment","showEmojis","setShowEmojis","likeEffect","setLikeEffect","handleLike","likePost","axios","data","post","handleComment","e","preventDefault","addComment","handleSave","savePost","useEffect","some","u","id","className","to","username","draggable","src","avatar","alt","moreIcons","onDoubleClick","setTimeout","loading","height","onClick","likeFill","likeIconOutline","current","focus","commentIcon","shareIcon","saveIconFill","saveIconOutline","length","moment","fromNow","map","c","onSubmit","emojiIcon","set","onSelect","native","title","type","value","ref","required","onFocus","onChange","target","placeholder","trim","disabled","Skeleton","animation","variant","width","sx","usersList","usersDialog","page","setPage","postOfFollowing","error","posts","totalPosts","likeError","message","success","newComment","commentError","commentSuccess","saveError","saveSuccess","saveMessage","toast","clearErrors","getPostsOfFollowing","POST_FOLLOWING_RESET","LIKE_UNLIKE_POST_RESET","NEW_COMMENT_RESET","SAVE_UNSAVE_POST_RESET","Array","fill","el","i","dataLength","next","prev","hasMore","loader","SpinLoader","UsersDialog","open","onClose","follow","setFollow","followUser","allUsers","users","followError","getSuggestedUsers","FOLLOW_USER_RESET","name","SkeletonUserItem","key","href","MetaData"],"sourceRoot":""}